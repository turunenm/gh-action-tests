# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: All in One

on: [push]
  #push:
  #  branches: [ master ]
  #  paths-ignore:
  #    - '**.md'
  #pull_request:
  #  branches: [ master ]
  #  paths-ignore:
  #    - '**.md'

jobs:
  static_analysis:
    name: Static Analysis

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements_test.txt
    - name: Typecheck with mypy
      run: |
        mypy --show-error-codes Source
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Lint with pylint
      run: |
        pylint Source

  unit_and_acceptance:
    name: Tests 
    needs: static_analysis

    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.flaky_webdriver }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        browser: [chrome, edge, firefox]
        python-version: [3.8, 3.9]
        flaky_webdriver: [false]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install RFW 3.2.2
      if: matrix.python-version == '3.9'
      run: |
        python -m pip install robotframework==3.2.2
#
    - name: Install Linux dependencies
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get install matchbox scrot
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements_test.txt
#        
        pip install QWeb
    - name: Display Python version
      run: |
        python -c "import sys; print(sys.version)"
    - name: Display Robot FW version
      run: |
        python -m pip show robotframework
#
    - name: Prepare Linux Execution
      if: matrix.os == 'ubuntu-latest'
      run: |
        export DISPLAY=:88
        Xvfb $DISPLAY -screen 0 1920x1080x24 & sleep 1
        matchbox-window-manager -use_titlebar no &

    - name: Display screen resolution
      run: |
        python -c "import pyautogui; print(pyautogui.size())"

#    - name: Test with pytest
#      run: |
#        pytest -v --junit-xml=unittests.xml --cov=Source

    - name: Acceptance tests ${{ matrix.browser }}
      run: |
        python -m robot --exitonfailure -e jailed -e PROBLEM_IN_${{ runner.os }} -e PROBLEM_IN_${{ matrix.browser }} -v BROWSER:${{ matrix.browser }} -d output_${{ matrix.browser }} --name ${{ runner.os }}-${{ matrix.python-version }}-${{ matrix.browser }} -b debug.txt --consolecolors ansi test/acceptance
    - name: Archive Robot Framework Tests Report
      if: ${{ always() }}
      uses: actions/upload-artifact@v1
      with:
        name: acceptance-tests-report-${{ matrix.browser }}-${{ runner.os }}-${{ matrix.python-version }}
        path: ./output_${{ matrix.browser }}
